{"ast":null,"code":"import { FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/material/card\";\nimport * as i3 from \"@angular/material/input\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/forms\";\nfunction AppComponent_mat_error_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Weight can't be \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"null\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction AppComponent_mat_error_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Please enter a valid positive number \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_mat_error_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Please enter a positive number \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_mat_error_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Please enter a number less than or equal to 999 \");\n    i0.ɵɵelementEnd();\n  }\n}\n// for input format control error\nexport class AppComponent {\n  constructor() {\n    this.title = 'bmi-calculator';\n    this.weight = '';\n    this.numberFormControl = new FormControl('', [Validators.required, Validators.pattern(\"^[0-9]\\d*(\\.\\d+)?$\"), Validators.minLength(2), Validators.maxLength(3)]);\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)();\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 26,\n  vars: 7,\n  consts: [[1, \"container\"], [1, \"material-icons\"], [1, \"example-form\"], [1, \"example-full-width\"], [\"type\", \"number\", \"matInput\", \"\", \"placeholder\", \"Ex. 50\", 3, \"formControl\", \"min\", \"max\"], [4, \"ngIf\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"title\");\n      i0.ɵɵtext(1, \"BMI - Calculator\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"body\")(3, \"div\", 0)(4, \"mat-card\")(5, \"mat-card-title-group\")(6, \"mat-card-title\");\n      i0.ɵɵtext(7, \" BMI Calculator \");\n      i0.ɵɵelementStart(8, \"span\", 1);\n      i0.ɵɵtext(9, \"calculate\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"mat-card-subtitle\");\n      i0.ɵɵtext(11, \" BMI stands for Body Mass Index. It is a measure of body fat based on a person's weight and height. \");\n      i0.ɵɵelementStart(12, \"p\");\n      i0.ɵɵtext(13, \"KG / Height ^ 2 = BMI\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(14, \"mat-card-content\")(15, \"form\", 2)(16, \"mat-form-field\", 3)(17, \"mat-label\");\n      i0.ɵɵtext(18, \"Weight\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(19, \"input\", 4);\n      i0.ɵɵtemplate(20, AppComponent_mat_error_20_Template, 4, 0, \"mat-error\", 5);\n      i0.ɵɵtemplate(21, AppComponent_mat_error_21_Template, 2, 0, \"mat-error\", 5);\n      i0.ɵɵtemplate(22, AppComponent_mat_error_22_Template, 2, 0, \"mat-error\", 5);\n      i0.ɵɵtemplate(23, AppComponent_mat_error_23_Template, 2, 0, \"mat-error\", 5);\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(24, \"mat-card\");\n      i0.ɵɵtext(25, \" heelo2 \");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(19);\n      i0.ɵɵproperty(\"formControl\", ctx.numberFormControl)(\"min\", 0)(\"max\", 999);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.numberFormControl.hasError(\"required\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.numberFormControl.hasError(\"pattern\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.numberFormControl.hasError(\"min\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.numberFormControl.hasError(\"max\"));\n    }\n  },\n  dependencies: [i1.NgIf, i2.MatCard, i2.MatCardContent, i2.MatCardSubtitle, i2.MatCardTitle, i2.MatCardTitleGroup, i3.MatInput, i4.MatFormField, i4.MatLabel, i4.MatError, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NumberValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.MinValidator, i5.MaxValidator, i5.NgForm, i5.FormControlDirective],\n  styles: [\".container[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: row;\\n}\\n\\n.mat-mdc-card[_ngcontent-%COMP%] {\\n  width: 50%;\\n  margin: 1%;\\n  padding: 2%;\\n}\\n\\n.mat-mdc-card-title[_ngcontent-%COMP%], .mat-mdc-card-subtitle[_ngcontent-%COMP%] {\\n  margin: 5%;\\n}\\n\\n.mat-mdc-form-field[_ngcontent-%COMP%] {\\n  margin: 2%;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksYUFBQTtFQUNBLG1CQUFBO0FBQ0o7O0FBQ0E7RUFDSSxVQUFBO0VBQ0EsVUFBQTtFQUNBLFdBQUE7QUFFSjs7QUFBQTtFQUNJLFVBQUE7QUFHSjs7QUFEQTtFQUNJLFVBQUE7QUFJSiIsInNvdXJjZXNDb250ZW50IjpbIi5jb250YWluZXJ7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcclxufVxyXG4ubWF0LW1kYy1jYXJke1xyXG4gICAgd2lkdGg6IDUwJTtcclxuICAgIG1hcmdpbjogMSU7XHJcbiAgICBwYWRkaW5nOiAyJTtcclxufVxyXG4ubWF0LW1kYy1jYXJkLXRpdGxlLCAubWF0LW1kYy1jYXJkLXN1YnRpdGxle1xyXG4gICAgbWFyZ2luOiA1JTtcclxufVxyXG4ubWF0LW1kYy1mb3JtLWZpZWxke1xyXG4gICAgbWFyZ2luOiAyJTtcclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"AACA,SAAQA,WAAW,EAA8BC,UAAU,QAAQ,gBAAgB;;;;;;;;;ICmBrEC,iCAA0D;IACtDA,iCAAgB;IAAAA,8BAAQ;IAAAA,oBAAI;IAAAA,iBAAS;;;;;IAEzCA,iCAAyD;IACrDA,sDACJ;IAAAA,iBAAY;;;;;IACZA,iCAAqD;IACjDA,gDACJ;IAAAA,iBAAY;;;;;IACZA,iCAAqD;IACjDA,iEACJ;IAAAA,iBAAY;;;AD3B1B;AAQA,OAAM,MAAOC,YAAY;EALzBC;IAME,UAAK,GAAG,gBAAgB;IACxB,WAAM,GAAG,EAAE;IAEX,sBAAiB,GAAG,IAAIJ,WAAW,CAAC,EAAE,EAAE,CACtCC,UAAU,CAACI,QAAQ,EACnBJ,UAAU,CAACK,OAAO,CAAC,oBAAoB,CAAC,EACxCL,UAAU,CAACM,SAAS,CAAC,CAAC,CAAC,EACvBN,UAAU,CAACO,SAAS,CAAC,CAAC,CAAC,CACxB,CAAC;;;AATSL,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAAM;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCZzBX,6BAAO;MAAAA,gCAAgB;MAAAA,iBAAQ;MAC/BA,4BAAM;MAKIA,gCACA;MAAAA,+BAA6B;MAAAA,yBAAS;MAAAA,iBAAO;MAE/CA,0CAAmB;MACjBA,qHACA;MAAAA,0BAAG;MAAAA,sCAAqB;MAAAA,iBAAI;MAGhCA,yCAAkB;MAGCA,uBAAM;MAAAA,iBAAY;MAC7BA,4BACsB;MACtBA,2EAEY;MACZA,2EAEY;MACZA,2EAEY;MACZA,2EAEY;MAChBA,iBAAiB;MAIvBA,iCAAU;MACRA,yBACF;MAAAA,iBAAW;;;MApB6BA,gBAAiC;MAAjCA,mDAAiC;MAEnDA,eAA4C;MAA5CA,iEAA4C;MAG5CA,eAA2C;MAA3CA,gEAA2C;MAG3CA,eAAuC;MAAvCA,4DAAuC;MAGvCA,eAAuC;MAAvCA,4DAAuC","names":["FormControl","Validators","i0","AppComponent","constructor","required","pattern","minLength","maxLength","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\user\\Desktop\\Code_Project\\Angular_Project\\BMI\\BMI_calculator\\bmi-calculator\\src\\app\\app.component.ts","C:\\Users\\user\\Desktop\\Code_Project\\Angular_Project\\BMI\\BMI_calculator\\bmi-calculator\\src\\app\\app.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport {FormControl, FormGroupDirective, NgForm, Validators } from '@angular/forms';\nimport {ErrorStateMatcher} from '@angular/material/core';\n\n// for input format control error\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'bmi-calculator';\n  weight = '';\n\n  numberFormControl = new FormControl('', [\n    Validators.required,\n    Validators.pattern(\"^[0-9]\\d*(\\.\\d+)?$\"),\n    Validators.minLength(2),\n    Validators.maxLength(3)\n  ]);\n\n}\n","<title>BMI - Calculator</title>\n<body>\n  <div class=\"container\">\n    <mat-card>\n      <mat-card-title-group>\n        <mat-card-title>\n          BMI Calculator\n          <span class=\"material-icons\">calculate</span>\n        </mat-card-title>\n        <mat-card-subtitle>\n          BMI stands for Body Mass Index. It is a measure of body fat based on a person's weight and height.\n          <p>KG / Height ^ 2 = BMI</p>\n        </mat-card-subtitle>\n      </mat-card-title-group>\n      <mat-card-content>\n        <form class=\"example-form\">\n          <mat-form-field class=\"example-full-width\">\n              <mat-label>Weight</mat-label>\n              <input type=\"number\" matInput [formControl]=\"numberFormControl\" placeholder=\"Ex. 50\" \n              [min]=\"0\" [max]=\"999\">\n              <mat-error *ngIf=\"numberFormControl.hasError('required')\">\n                  Weight can't be <strong>null</strong>\n              </mat-error>\n              <mat-error *ngIf=\"numberFormControl.hasError('pattern')\">\n                  Please enter a valid positive number\n              </mat-error>\n              <mat-error *ngIf=\"numberFormControl.hasError('min')\">\n                  Please enter a positive number\n              </mat-error>\n              <mat-error *ngIf=\"numberFormControl.hasError('max')\">\n                  Please enter a number less than or equal to 999\n              </mat-error>\n          </mat-form-field>\n      </form>\n      </mat-card-content>\n    </mat-card>\n    <mat-card>\n      heelo2\n    </mat-card>\n  </div>\n</body>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}